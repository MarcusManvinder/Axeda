//Get details for the specified device

import com.axeda.drm.sdk.Context;
import com.axeda.drm.sdk.user.User;
import com.axeda.drm.sdk.device.*;
import com.axeda.drm.sdk.model.*;
import com.axeda.drm.sdk.data.*;
import com.axeda.common.sdk.jdbc.StringQuery;
import com.axeda.drm.sdk.mobilelocation.*;
import java.util.*;
import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*

def writer = new StringWriter()
def xml = new MarkupBuilder(writer)


try {
  String username = parameters.username
  String devicename  = parameters.devicename

  Context ctx = Context.create(username);

  DeviceFinder dfinder= new DeviceFinder(ctx);
  dfinder.setSerialNumber(devicename)
  Device device = dfinder.find();

  CurrentDataFinder cdf = new CurrentDataFinder(ctx, device)
  DataValueList dvl = cdf.find();

  DataItemFinder dif = new DataItemFinder(ctx)
  dif.setModel(device.getModel())
  DataItem di = dif.find()

  HistoricalDataFinder hdf = new HistoricalDataFinder(ctx, device)
  hdf.setSortOrder(false)
  xml.Response() {
    for(dv in dvl.getList()) {

      DataItem ('name': dv.getDataItem().getName(), 'val': dv.asInteger(), 'model':di.getModel().getName())

    }
  }

} catch (Exception ex) {
  xml.Response() {
    Fault {
      Code('Groovy Exception')
      Message(ex.getMessage())
      StringWriter sw = new StringWriter();
      PrintWriter pw = new PrintWriter(sw);
      ex.printStackTrace(pw);
      Detail(sw.toString())
    }
  }
}
// logger.info(writer.toString());
return ['Content-Type': 'text/xml', 'Content': writer.toString()]
