import com.axeda.drm.sdk.Context;
import com.axeda.drm.sdk.user.User;
import com.axeda.drm.sdk.device.*;
import com.axeda.drm.sdk.model.*;
import com.axeda.drm.sdk.data.*;
import com.axeda.common.sdk.jdbc.StringQuery;
import com.axeda.drm.sdk.mobilelocation.*;
import java.util.*;
import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*

def writer = new StringWriter()
def xml = new MarkupBuilder(writer)


try {

  String username = parameters.username
  String devicename  = parameters.devicename
  String alarmname  = parameters.alarmname
  String modelname= parameters.modelname

  Context ctx = Context.create(username);

  ModelFinder mfinder= new ModelFinder(ctx);
  mfinder.setName(modelname)
  Model model= mfinder.find();

  DeviceFinder dfinder= new DeviceFinder(ctx);
  dfinder.setSerialNumber(devicename)
  dfinder.setModel(model)
  Device device = dfinder.find();

  if (alarmname != null)
  {
    AlarmFinder alarmFinder = new AlarmFinder(ctx);
    alarmFinder.setDevice(device);
    alarmFinder.setAlarmName(alarmname);
    Alarm al = alarmFinder.find();

    xml.Response()
      {
        Alarm( 'desc': al.description,  'model': al.device.model.name, 'cust':al.device.customer.name)
      }
  }
  else
  {
    xml.Response()
      {
        Alarm('model': device.model.name, 'cust':device.customer.name)
      }
  }

} catch (Exception ex) {
  xml.Response() {
    Fault {
      Code('Groovy Exception')
      Message(ex.getMessage())
      StringWriter sw = new StringWriter();
      PrintWriter pw = new PrintWriter(sw);
      ex.printStackTrace(pw);
      Detail(sw.toString())
    }
  }
}
//logger.info(writer.toString());
return ['Content-Type': 'text/xml', 'Content': writer.toString()]
